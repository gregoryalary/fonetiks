{"version":3,"sources":["app/i18n/i18n.js","app/components/AppBar.tsx","app/screens/App.tsx","home/components/ExcerciceCard.tsx","home/screens/Home.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","data/types/phoneme.type.ts","find-phoneme/components/FindPhonemeSettingsForm.tsx","data/utils/phoneme-data.util.ts","find-phoneme/components/FindPhonemeGame.tsx","find-phoneme/utils/find-phoneme.util.ts","find-phoneme/hooks/usePhonemeQuestionBuilder.tsx","find-phoneme/components/PhonemeCollectionButtons.tsx","find-phoneme/screens/FindPhoneme.tsx","find-phoneme/components/FindPhonemeGameResults.tsx","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","fr","translation","lng","interpolation","escapeValue","AppBar","react","Box","sx","flexGrow","position","Toolbar","dist","to","Typography","variant","component","t","App","theme","responsiveFontSizes","createTheme","typography","h2","fontSize","lineHeight","h3","react_default","a","createElement","ThemeProvider","components_AppBar","padding","react_router_dist","ExerciseCard","_ref","title","description","route","useTheme","border","backgroundColor","palette","grey","borderColor","borderRadius","mb","display","justifyContent","borderTop","Button","endIcon","ArrowForward_default","Home","ExcerciceCard","Boolean","window","location","hostname","match","ConsonnantArticulationPlace","VowelAperture","SemiVowelArticulationPlace","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","DEFAULT_VALUES","round","include","consonant","vowel","semiVowel","FindPhonemeSettingsForm","onSubmit","useTranslation","validationSchema","useMemo","yup","required","min","max","shape","when","is","isTrue","formik_esm","initialValues","values","_ref2","errors","setValues","handleChange","handleBlur","submitForm","flexDirection","FormControl","error","FormLabel","Grid","container","spacing","alignItems","item","xs","TextField","value","name","onChange","onBlur","inputProps","type","fullWidth","Slider","color","valueLabelDisplay","_","Object","objectSpread","FormHelperText","FormGroup","FormControlLabel","control","Checkbox","defaultChecked","label","onClick","StateType","getRandomPhonemeInCollectionFromSettings","settings","collection","phonemes","concat","toConsumableArray","consonnants","vowels","findAvailablePhonemesFromSettings","sample","usePhonemeQuestionBuilder","useCallback","phoneme","parameters","isOcclusive","isOcclusiveConsonnant","isVoiced","consonnantArticulationPlace","isNazalised","isNonOcclusiveConsonnant","isLabialased","isVowel","aperture","articulationPlaceIsPosterior","isSemiVowel","semiVowelArticulationPlace","map","key","join","PhonemeCollectionCategory","_ref$highlightedPhone","highlightedPhoneme","undefined","getButtonColor","symbol","getButtonVariant","Stack","index","textTransform","size","PhonemeCollectionButtons","_ref2$highlightedPhon","PhonemeCollectionButtons_PhonemeCollectionCategory","FindPhonemeGame","onGameIsEnded","phonemeQuestionBuilder","_useState","useState","Guessing","playedRounds","phonemeCollection","occlusiveConsonnants","isConsonnant","Bilabial","ApicoAlveodental","DorsoPalatal","DorsoVelaire","nonOcclusiveConsonnants","LabioDental","PreDorsoAleveloaire","PostAlveolaire","ApicoAlveolaire","DorsoUvulaire","Closed","SemiClosed","SemiOpened","Opened","getPhonemes","phonemeToGuess","_useState2","slicedToArray","state","setState","_React$useState","React","_React$useState2","showSuccessAlert","setShowSuccessAlert","goToNextRound","guessedPhoneme","length","toGuess","guessed","Ended","useEffect","setTimeout","Correcting","Fragment","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","disableWindowBlurListener","Alert","onClose","severity","width","current","h6","components_PhonemeCollectionButtons","guess","FindPhonemeResults","onReplay","wrongAnswers","filter","playedRound","score","count","wrongAnswer","FindPhoneme","Settings","components_FindPhonemeSettingsForm","Playing","components_FindPhonemeGame","Result","FindPhonemeGameResults","router","createBrowserRouter","createRoutesFromElements","path","element","screens_App","screens_Home","screens_FindPhoneme","ReactDOM","createRoot","document","getElementById","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5b89290e.chunk.js","sourcesContent":["// i18n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\n// Locales\nimport fr from './locales/fr.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      fr: {\n        translation: fr,\n      },\n    },\n    lng: 'fr',\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import * as React from 'react';\n\n// Components\nimport {\n  AppBar as MuiAppBar, Box, Toolbar, Typography,\n} from '@mui/material';\n\n// i18n\nimport { t } from 'i18next';\nimport { Link } from 'react-router-dom';\n\nfunction AppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <MuiAppBar position=\"static\">\n        <Toolbar>\n          <Link to=\"/\">\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {t('title')}\n            </Typography>\n          </Link>\n        </Toolbar>\n      </MuiAppBar>\n    </Box>\n  );\n}\n\nexport default AppBar;\n","// React\nimport React from 'react';\n\n// Mui\nimport {\n  Box, createTheme, responsiveFontSizes, ThemeProvider,\n} from '@mui/material';\n\n// Routing\nimport { Outlet } from 'react-router-dom';\n\n// Styling\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport AppBar from '../components/AppBar';\n\nfunction App() {\n  const theme = responsiveFontSizes(createTheme({\n    typography: {\n      h2: {\n        fontSize: 40,\n        lineHeight: 1.5,\n      },\n      h3: {\n        fontSize: 30,\n        lineHeight: 1.3,\n      },\n    },\n    // todo?\n  }));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar />\n      <Box padding={1}>\n        <Outlet />\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React, { FC } from 'react';\n\n// MUI\nimport {\n  Box, Button, Typography,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\n// i18n\nimport { t } from 'i18next';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  title: string;\n  description: string;\n  route: string;\n};\n\nconst ExerciseCard: FC<Props> = ({ title, description, route }) => {\n  const theme = useTheme();\n\n  return (\n    <Box sx={{\n      border: 1,\n      backgroundColor: theme.palette.grey[100],\n      borderColor: theme.palette.grey[200],\n      borderRadius: 1,\n    }}\n    >\n      <Box sx={{\n        padding: 1,\n      }}\n      >\n        <Typography sx={{ mb: 1 }} variant=\"h3\">{title}</Typography>\n        <Typography variant=\"body2\">\n          {description}\n        </Typography>\n      </Box>\n      <Box sx={{\n        padding: 1,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        borderTop: 1,\n        borderColor: theme.palette.grey[200],\n      }}\n      >\n        <Link to={route}>\n          <Button variant=\"contained\" endIcon={<ArrowForwardIcon />}>{t('home.excercices.open')}</Button>\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExerciseCard;\n","// React\nimport React, { FC } from 'react';\n\n// i18n\nimport { t } from 'i18next';\n\n// MUI\nimport { Box, Typography } from '@mui/material';\n\n// Components\nimport ExerciseCard from '../components/ExcerciceCard';\n\nconst Home: FC = () => (\n  <Box>\n    <Box sx={{ mb: 2 }}>\n      <Typography variant=\"h2\" sx={{ mb: 1 }}>\n        {t('home.introduction.title')}\n      </Typography>\n      <Typography variant=\"body1\">\n        {t('home.introduction.body')}\n      </Typography>\n    </Box>\n    <Box>\n      <Typography variant=\"h2\" sx={{ mb: 1 }}>\n        {t('home.excercices.title')}\n      </Typography>\n      <Box>\n        <ExerciseCard title={t('home.excercices.find_phoneme.title')} description={t('home.excercices.find_phoneme.description')} route=\"/excercice/find-phoneme\" />\n      </Box>\n    </Box>\n  </Box>\n);\n\nexport default Home;\n","/* eslint-disable */ \n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface Phoneme {\n  symbol: string\n}\n\nexport enum ConsonnantArticulationPlace {\n  Bilabial = 'bilabial',\n  ApicoAlveodental = 'apico_alveodental',\n  DorsoPalatal = 'dorso_palatal',\n  DorsoVelaire = 'dorso_velaire',\n  LabioDental = 'labio_dental',\n  PreDorsoAleveloaire = 'pre_dorso_alvoelaire',\n  PostAlveolaire = 'post_alvoelaire',\n  ApicoAlveolaire = 'apico_alvoelaire',\n  DorsoUvulaire = 'dorso_uvulaire',\n}\n\nexport interface ConsonnantPhoneme<IsOcclusive extends Boolean> extends Phoneme {\n  isConsonnant: true\n  isOcclusive: IsOcclusive\n  consonnantArticulationPlace: ConsonnantArticulationPlace,\n  isVoiced: boolean,\n  isNazalised: IsOcclusive extends true ? boolean : undefined,\n  isLabialased: IsOcclusive extends true ? undefined : boolean,\n}\n\nexport enum VowelAperture {\n  Closed = 'closed',\n  SemiClosed = 'semi_closed',\n  Opened = 'opened',\n  SemiOpened = 'semi_opened',\n}\n\nexport interface VowelPhoneme extends Phoneme {\n  isVowel: true\n  aperture: VowelAperture,\n  articulationPlaceIsPosterior: boolean,\n  isLabialased: boolean,\n  isNazalised: boolean\n}\n\nexport enum SemiVowelArticulationPlace {\n  DorsoPalatal = 'dorso_palatal',\n  DorsoVelaire = 'dorso_velaire',\n}\n\nexport interface SemiVowelPhoneme extends Phoneme {\n  isSemiVowel: true\n  isOcclusive: false\n  semiVowelArticulationPlace: SemiVowelArticulationPlace\n  isLabialased: boolean\n}\n\nexport interface PhonemeCollection {\n  consonnants: ConsonnantPhoneme<boolean>[]\n  vowels: VowelPhoneme[]\n  // semiVowels: SemiVowelPhoneme[]\n}\n","import React, { FC, useMemo } from 'react';\n\n// Formik / Yup\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\n// MUI\nimport {\n  Box, Button, Checkbox, FormControl, FormControlLabel,\n  FormGroup, FormHelperText, FormLabel, Grid, Slider, TextField,\n} from '@mui/material';\n\n// i18n\nimport { useTranslation } from 'react-i18next';\n\n// Types\nimport { FindPhonemeSettings } from '../types/find-phoneme.type';\n\nconst DEFAULT_VALUES: FindPhonemeSettings = {\n  round: 10,\n  include: {\n    consonant: true,\n    vowel: true,\n    semiVowel: true,\n  },\n};\n\ntype Props = {\n  onSubmit: (settings: FindPhonemeSettings) => any\n};\n\nconst FindPhonemeSettingsForm: FC<Props> = ({ onSubmit }) => {\n  const { t } = useTranslation();\n\n  const validationSchema = useMemo(() => yup.object({\n    round: yup.number().required().min(1).max(50),\n    include: yup.object().shape({\n      vowel: yup.bool().when(['consonant', 'semiVowel'], {\n        is: (consonant: boolean, semiVowel: boolean) => !consonant && !semiVowel,\n        then: yup.bool().isTrue(),\n      }),\n      consonant: yup.bool().when(['vowel', 'semiVowel'], {\n        is: (vowel: boolean, semiVowel: boolean) => !vowel && !semiVowel,\n        then: yup.bool().isTrue(),\n      }),\n      semiVowel: yup.bool().when(['vowel', 'consonant'], {\n        is: (vowel: boolean, consonant: boolean) => !vowel && !consonant,\n        then: yup.bool().isTrue(),\n      }),\n    }, [['vowel', 'consonant'], ['vowel', 'semiVowel'], ['consonant', 'semiVowel']]),\n  }), []);\n\n  return (\n    <Formik<FindPhonemeSettings>\n      initialValues={DEFAULT_VALUES}\n      validationSchema={validationSchema}\n      onSubmit={(values) => onSubmit(values)}\n    >\n      {({\n        errors,\n        values,\n        setValues,\n        handleChange,\n        handleBlur,\n        submitForm,\n      }) => (\n        <Box component=\"form\" sx={{ display: 'flex', flexDirection: 'column' }}>\n          <FormControl sx={{ mb: 2 }} error={!!errors.round}>\n            <FormLabel>\n              {t('find_phoneme.settings.round')}\n            </FormLabel>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={4}>\n                <TextField\n                  error={!!errors.round}\n                  value={values.round}\n                  name=\"round\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  inputProps={{\n                    min: 1,\n                    max: 36,\n                    type: 'number',\n                  }}\n                  variant=\"standard\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  color=\"primary\"\n                  valueLabelDisplay=\"auto\"\n                  value={values.round}\n                  min={1}\n                  max={50}\n                  onChange={(_, value) => setValues({ ...values, round: value as number })}\n                />\n              </Grid>\n            </Grid>\n            {errors.round && (<FormHelperText>{t('find_phoneme.settings.form.round.error', { min: 1, max: 50 })}</FormHelperText>)}\n          </FormControl>\n\n          <FormControl sx={{ mb: 2 }} error={!!errors.include}>\n            <FormLabel>\n              {t('find_phoneme.settings.form.include.name')}\n            </FormLabel>\n            <FormGroup>\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    name=\"include.consonant\"\n                    onChange={handleChange}\n                    value={values.include.consonant}\n                    defaultChecked\n                  />\n                )}\n                label={t('find_phoneme.settings.include.consonant')}\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    name=\"include.vowel\"\n                    onChange={handleChange}\n                    value={values.include.vowel}\n                    defaultChecked\n                  />\n                )}\n                label={t('find_phoneme.settings.include.vowel')}\n              />\n              {/* <FormControlLabel\n                control={(\n                  <Checkbox\n                    name=\"include.semiVowel\"\n                    onChange={handleChange}\n                    value={values.include.semiVowel}\n                    defaultChecked\n                  />\n                )}\n                label={t('find_phoneme.settings.include.semi_vowel')}\n                /> */}\n              {errors.include && (<FormHelperText>{t('find_phoneme.settings.form.include.error')}</FormHelperText>)}\n            </FormGroup>\n          </FormControl>\n\n          <Box sx={{ display: 'flex', justifyContent: 'end' }}>\n            <Button variant=\"contained\" onClick={submitForm}>\n              C&apos;est parti !\n            </Button>\n          </Box>\n\n        </Box>\n      )}\n    </Formik>\n  );\n};\n\nexport default FindPhonemeSettingsForm;\n","// Types\nimport {\n  ConsonnantArticulationPlace, ConsonnantPhoneme, PhonemeCollection, VowelAperture,\n} from '../types/phoneme.type';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getPhonemes = (): PhonemeCollection => {\n  const occlusiveConsonnants: Array<ConsonnantPhoneme<true>> = [\n    {\n      isConsonnant: true,\n      symbol: 'p',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.Bilabial,\n      isVoiced: false,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'b',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.Bilabial,\n      isVoiced: true,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'm',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.Bilabial,\n      isVoiced: true,\n      isNazalised: true,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 't',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.ApicoAlveodental,\n      isVoiced: false,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'd',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.ApicoAlveodental,\n      isVoiced: true,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'n',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.ApicoAlveodental,\n      isVoiced: true,\n      isNazalised: true,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'ɲ',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.DorsoPalatal,\n      isVoiced: true,\n      isNazalised: true,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'k',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.DorsoVelaire,\n      isVoiced: false,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'g',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.DorsoVelaire,\n      isVoiced: true,\n      isNazalised: false,\n      isLabialased: undefined,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'ŋ',\n      isOcclusive: true,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.DorsoVelaire,\n      isVoiced: true,\n      isNazalised: true,\n      isLabialased: undefined,\n    },\n  ];\n\n  const nonOcclusiveConsonnants: Array<ConsonnantPhoneme<false>> = [\n    {\n      isConsonnant: true,\n      symbol: 'f',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.LabioDental,\n      isVoiced: false,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'v',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.LabioDental,\n      isVoiced: true,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n    {\n      isConsonnant: true,\n      symbol: 's',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.PreDorsoAleveloaire,\n      isVoiced: false,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'z',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.PreDorsoAleveloaire,\n      isVoiced: true,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'ʃ',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.PostAlveolaire,\n      isVoiced: false,\n      isNazalised: undefined,\n      isLabialased: true,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'ʒ',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.PostAlveolaire,\n      isVoiced: true,\n      isNazalised: undefined,\n      isLabialased: true,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'l',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.ApicoAlveolaire,\n      isVoiced: true,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n    {\n      isConsonnant: true,\n      symbol: 'r',\n      isOcclusive: false,\n      consonnantArticulationPlace: ConsonnantArticulationPlace.DorsoUvulaire,\n      isVoiced: true,\n      isNazalised: undefined,\n      isLabialased: false,\n    },\n  ];\n\n  return {\n    consonnants: [...occlusiveConsonnants, ...nonOcclusiveConsonnants],\n    vowels: [\n      {\n        isVowel: true,\n        symbol: 'i',\n        aperture: VowelAperture.Closed,\n        articulationPlaceIsPosterior: false,\n        isLabialased: false,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'y',\n        aperture: VowelAperture.Closed,\n        articulationPlaceIsPosterior: false,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'u',\n        aperture: VowelAperture.Closed,\n        articulationPlaceIsPosterior: true,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'e',\n        aperture: VowelAperture.SemiClosed,\n        articulationPlaceIsPosterior: false,\n        isLabialased: false,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'ø',\n        aperture: VowelAperture.SemiClosed,\n        articulationPlaceIsPosterior: false,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'o',\n        aperture: VowelAperture.SemiClosed,\n        articulationPlaceIsPosterior: true,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'ɛ',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: false,\n        isLabialased: false,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'œ',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: false,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'ɔ',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: true,\n        isLabialased: true,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'ɛ̃',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: false,\n        isLabialased: false,\n        isNazalised: true,\n      },\n      {\n        isVowel: true,\n        symbol: 'œ̃',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: false,\n        isLabialased: true,\n        isNazalised: true,\n      },\n      {\n        isVowel: true,\n        symbol: 'ɔ̃',\n        aperture: VowelAperture.SemiOpened,\n        articulationPlaceIsPosterior: true,\n        isLabialased: true,\n        isNazalised: true,\n      },\n      {\n        isVowel: true,\n        symbol: 'a',\n        aperture: VowelAperture.Opened,\n        articulationPlaceIsPosterior: false,\n        isLabialased: false,\n        isNazalised: false,\n      },\n      {\n        isVowel: true,\n        symbol: 'ɑ̃',\n        aperture: VowelAperture.Opened,\n        articulationPlaceIsPosterior: true,\n        isLabialased: true,\n        isNazalised: true,\n      },\n    ],\n    /* semiVowels: [\n      {\n        isSemiVowel: true,\n        symbol: 'ɥ',\n        isOcclusive: false,\n        semiVowelArticulationPlace: SemiVowelArticulationPlace.DorsoPalatal,\n        isLabialased: true,\n      },\n      {\n        isSemiVowel: true,\n        symbol: 'j',\n        isOcclusive: false,\n        semiVowelArticulationPlace: SemiVowelArticulationPlace.DorsoPalatal,\n        isLabialased: false,\n      },\n      {\n        isSemiVowel: true,\n        symbol: 'w',\n        isOcclusive: false,\n        semiVowelArticulationPlace: SemiVowelArticulationPlace.DorsoVelaire,\n        isLabialased: true,\n      },\n    ], */\n  };\n};\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { FC, useEffect, useState } from 'react';\n\n// MUI\nimport {\n  Alert, Button, Snackbar, Stack, Typography, useTheme,\n} from '@mui/material';\n\n// i18n\nimport { useTranslation } from 'react-i18next';\n\n// Utils\nimport { getPhonemes } from '../../data/utils/phoneme-data.util';\nimport { getRandomPhonemeInCollectionFromSettings } from '../utils/find-phoneme.util';\nimport usePhonemeQuestionBuilder from '../hooks/usePhonemeQuestionBuilder';\n\n// Types\nimport { Phoneme, PhonemeCollection } from '../../data/types/phoneme.type';\nimport { FindPhonemeSettings, PlayedRound } from '../types/find-phoneme.type';\n\n// Components\nimport PhonemeCollectionButtons from './PhonemeCollectionButtons';\n\ntype Props = {\n  settings: FindPhonemeSettings,\n  onGameIsEnded: (rounds: PlayedRound[]) => any\n};\n\nenum StateType {\n  Guessing,\n  Correcting,\n  Ended,\n}\n\ntype BaseState = {\n  playedRounds: PlayedRound[],\n  phonemeCollection: PhonemeCollection,\n  phonemeToGuess: Phoneme,\n};\n\ntype GuessingState = BaseState & {\n  type: StateType.Guessing,\n};\n\ntype CorrectingState = BaseState & {\n  type: StateType.Correcting,\n  guessedPhoneme: Phoneme\n};\n\ntype EndedState = {\n  type: StateType.Ended,\n};\n\ntype State = GuessingState | CorrectingState | EndedState;\n\nconst FindPhonemeGame: FC<Props> = ({ settings, onGameIsEnded }) => {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const phonemeQuestionBuilder = usePhonemeQuestionBuilder();\n\n  const [state, setState] = useState<State>({\n    type: StateType.Guessing,\n    playedRounds: [],\n    ...((): {\n      phonemeToGuess: Phoneme,\n      phonemeCollection: PhonemeCollection } => {\n      const phonemeCollection = getPhonemes();\n      return {\n        phonemeCollection,\n        phonemeToGuess: getRandomPhonemeInCollectionFromSettings(settings, phonemeCollection),\n      };\n    })(),\n  });\n  const [showSuccessAlert, setShowSuccessAlert] = React.useState(false);\n\n  const goToNextRound = (state: GuessingState | CorrectingState, guessedPhoneme: Phoneme) => {\n    const playedRounds: PlayedRound[] = [...state.playedRounds, {\n      index: state.playedRounds.length,\n      toGuess: state.phonemeToGuess,\n      guessed: guessedPhoneme,\n    }];\n\n    if (playedRounds.length >= settings.round) {\n      onGameIsEnded(playedRounds);\n      setState({ type: StateType.Ended });\n    } else {\n      setState({\n        ...state,\n        type: StateType.Guessing,\n        phonemeToGuess: getRandomPhonemeInCollectionFromSettings(settings, state.phonemeCollection),\n        playedRounds,\n      });\n    }\n  };\n\n  const guess = (state: GuessingState, guessedPhoneme: Phoneme) => {\n    if (guessedPhoneme.symbol !== state.phonemeToGuess.symbol) {\n      setShowSuccessAlert(false);\n      setState({\n        ...state,\n        type: StateType.Correcting,\n        guessedPhoneme,\n      });\n    } else {\n      if (showSuccessAlert) {\n        setShowSuccessAlert(false);\n        setTimeout(() => setShowSuccessAlert(true), 100);\n      } else {\n        setShowSuccessAlert(true);\n      }\n      goToNextRound(state, guessedPhoneme);\n    }\n  };\n\n  useEffect(() => {\n    if (showSuccessAlert) {\n      setTimeout(() => setShowSuccessAlert(false), 1000);\n    }\n  }, [showSuccessAlert]);\n\n  if (state.type === StateType.Guessing || state.type === StateType.Correcting) {\n    return (\n      <>\n        <Snackbar\n          open={showSuccessAlert}\n          autoHideDuration={10000}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          disableWindowBlurListener\n        >\n          <Alert onClose={() => setShowSuccessAlert(false)} severity=\"success\" sx={{ width: '100%' }}>\n            {t('find_phoneme.game.right')}\n          </Alert>\n        </Snackbar>\n\n        <Stack spacing={2}>\n          <Stack spacing={1} alignItems=\"center\">\n            <Typography color={theme.palette.grey[600]}>\n              {t('find_phoneme.game.round', { current: state.playedRounds.length + 1, max: settings.round })}\n            </Typography>\n            <Typography fontSize={theme.typography.h6.fontSize}>\n              {phonemeQuestionBuilder(state.phonemeToGuess)}\n            </Typography>\n          </Stack>\n          {state.type === StateType.Guessing ? (\n            <PhonemeCollectionButtons\n              settings={settings}\n              collection={state.phonemeCollection}\n              onClick={(guessedPhoneme) => guess(state, guessedPhoneme)}\n            />\n          ) : (\n            <>\n              <Typography color=\"error\">\n                {t('find_phoneme.game.correction', { symbol: state.phonemeToGuess.symbol })}\n              </Typography>\n              <Button\n                color=\"error\"\n                size=\"small\"\n                onClick={() => goToNextRound(state, state.guessedPhoneme)}\n              >\n                {t('find_phoneme.game.next')}\n              </Button>\n\n            </>\n          )}\n        </Stack>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default FindPhonemeGame;\n","// Utils\nimport { sample } from 'lodash';\n\n// Types\nimport { Phoneme, PhonemeCollection } from '../../data/types/phoneme.type';\nimport { FindPhonemeSettings } from '../types/find-phoneme.type';\n\nexport const findAvailablePhonemesFromSettings = (\n  settings: FindPhonemeSettings,\n  collection: PhonemeCollection,\n): Phoneme[] => [\n  ...(settings.include.consonant ? collection.consonnants : []),\n  ...(settings.include.vowel ? collection.vowels : []),\n  // ...(settings.include.semiVowel ? collection.semiVowels : []),\n];\n\nexport const getRandomPhonemeInCollectionFromSettings = (\n  settings: FindPhonemeSettings,\n  collection: PhonemeCollection,\n): Phoneme => {\n  const phonemes = findAvailablePhonemesFromSettings(settings, collection);\n\n  return sample(phonemes) as Phoneme;\n};\n\nexport const buildPhonemeQuestion = (phoneme: Phoneme): string => `Quel phoneme est ${phoneme.symbol} ?`;\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { useCallback } from 'react';\n\n// i18n\nimport { useTranslation } from 'react-i18next';\n\n// Types\nimport {\n  ConsonnantPhoneme, Phoneme, SemiVowelPhoneme, VowelPhoneme,\n} from '../../data/types/phoneme.type';\n\nconst isOcclusiveConsonnant = (phoneme: Phoneme): phoneme is ConsonnantPhoneme<true> => 'isConsonnant' in phoneme && (phoneme as ConsonnantPhoneme<false>).isOcclusive;\nconst isNonOcclusiveConsonnant = (phoneme: Phoneme): phoneme is ConsonnantPhoneme<false> => 'isConsonnant' in phoneme && !((phoneme as ConsonnantPhoneme<false>).isOcclusive);\nconst isVowel = (phoneme: Phoneme): phoneme is VowelPhoneme => 'isVowel' in phoneme;\nconst isSemiVowel = (phoneme: Phoneme): phoneme is SemiVowelPhoneme => 'isSemiVowel' in phoneme;\n\nconst usePhonemeQuestionBuilder = () => {\n  const { t } = useTranslation();\n\n  return useCallback((phoneme: Phoneme): string => {\n    const parameters = ((phoneme: Phoneme): string[] => {\n      if (isOcclusiveConsonnant(phoneme)) {\n        return [\n          `phoneme.parameters.isVoiced.${phoneme.isVoiced ? 'true' : 'false'}`,\n          `phoneme.parameters.isOcclusive.${phoneme.isOcclusive ? 'true' : 'false'}`,\n          `phoneme.parameters.consonnantArticulationPlace.${phoneme.consonnantArticulationPlace}`,\n          `phoneme.parameters.isNazalised.${phoneme.isNazalised ? 'true' : 'false'}`,\n        ];\n      }\n\n      if (isNonOcclusiveConsonnant(phoneme)) {\n        return [\n          `phoneme.parameters.isVoiced.${phoneme.isVoiced ? 'true' : 'false'}`,\n          `phoneme.parameters.isOcclusive.${phoneme.isOcclusive ? 'true' : 'false'}`,\n          `phoneme.parameters.consonnantArticulationPlace.${phoneme.consonnantArticulationPlace}`,\n          `phoneme.parameters.isLabialased.${phoneme.isLabialased ? 'true' : 'false'}`,\n        ];\n      }\n\n      if (isVowel(phoneme)) {\n        return [\n          `phoneme.parameters.aperture.${phoneme.aperture}`,\n          `phoneme.parameters.articulationPlaceIsPosterior.${phoneme.articulationPlaceIsPosterior ? 'true' : 'false'}`,\n          `phoneme.parameters.isLabialased.${phoneme.isLabialased ? 'true' : 'false'}`,\n          `phoneme.parameters.isNazalised.${phoneme.isNazalised ? 'true' : 'false'}`,\n        ];\n      }\n\n      if (isSemiVowel(phoneme)) {\n        return [\n          `phoneme.parameters.isOcclusive.${phoneme.isOcclusive ? 'true' : 'false'}`,\n          `phoneme.parameters.consonnantArticulationPlace.${phoneme.semiVowelArticulationPlace}`,\n          `phoneme.parameters.isLabialased.${phoneme.isLabialased ? 'true' : 'false'}`,\n        ];\n      }\n\n      return [];\n    })(phoneme);\n\n    return [\n      t('phoneme.question_prefix'),\n      parameters.map((key) => t(key)).join(', '),\n      t('phoneme.question_suffix'),\n    ].join(' ');\n  }, [t]);\n};\n\nexport default usePhonemeQuestionBuilder;\n","import React, { FC } from 'react';\n\n// MUI\nimport {\n  Button, Grid, Typography, Stack,\n} from '@mui/material';\n\n// Types\nimport { Phoneme, PhonemeCollection } from '../../data/types/phoneme.type';\nimport { FindPhonemeSettings } from '../types/find-phoneme.type';\n\ntype PhonemeCollectionCategoryProps = {\n  phonemes: Phoneme[],\n  title: string,\n  highlightedPhoneme?: Phoneme,\n  onClick: (phoneme: Phoneme) => any\n};\n\nconst PhonemeCollectionCategory: FC<PhonemeCollectionCategoryProps> = ({\n  phonemes,\n  title,\n  highlightedPhoneme = undefined,\n  onClick,\n}) => {\n  const getButtonColor = (phoneme: Phoneme) => {\n    if (highlightedPhoneme) {\n      return highlightedPhoneme.symbol === phoneme.symbol ? 'success' : 'error';\n    }\n    return 'info';\n  };\n\n  const getButtonVariant = (\n    phoneme: Phoneme,\n  ) => (highlightedPhoneme && highlightedPhoneme.symbol === phoneme.symbol\n    ? 'contained'\n    : 'outlined');\n\n  return (\n    <Stack>\n      <Typography>{title}</Typography>\n      <Grid container spacing={1}>\n        {phonemes.map((phoneme, index) => (\n          <Grid item xs={3} key={`${index}${phoneme.symbol}`}>\n            <Button\n              sx={{ textTransform: 'none' }}\n              onClick={() => onClick(phoneme)}\n              fullWidth\n              size=\"medium\"\n              variant={getButtonVariant(phoneme)}\n              color={getButtonColor(phoneme)}\n            >\n              {phoneme.symbol}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    </Stack>\n  );\n};\n\ntype Props = {\n  settings: FindPhonemeSettings,\n  collection: PhonemeCollection,\n  highlightedPhoneme?: Phoneme,\n  onClick: (phoneme: Phoneme) => any\n};\n\nconst PhonemeCollectionButtons: FC<Props> = ({\n  settings, collection, highlightedPhoneme = undefined, onClick,\n}) => (\n  <Stack spacing={2}>\n    {settings.include.consonant && (\n    <PhonemeCollectionCategory\n      phonemes={collection.consonnants}\n      title=\"Consonnes\"\n      onClick={onClick}\n      highlightedPhoneme={highlightedPhoneme}\n    />\n    )}\n    {settings.include.vowel && (\n    <PhonemeCollectionCategory\n      phonemes={collection.vowels}\n      title=\"Voyelles\"\n      onClick={onClick}\n      highlightedPhoneme={highlightedPhoneme}\n    />\n    )}\n    {/* settings.include.semiVowel && (\n    <PhonemeCollectionCategory\n      phonemes={collection.semiVowels}\n      title=\"Semi-voyelles\"\n      onClick={onClick}\n      highlightedPhoneme={highlightedPhoneme}\n    />\n    ) */}\n  </Stack>\n);\n\nexport default PhonemeCollectionButtons;\n","import React, { FC, useState } from 'react';\n\n// Types\nimport { FindPhonemeSettings, PlayedRound } from '../types/find-phoneme.type';\n\n// Components\nimport FindPhonemeSettingsForm from '../components/FindPhonemeSettingsForm';\nimport FindPhonemeGame from '../components/FindPhonemeGame';\nimport FindPhonemeResults from '../components/FindPhonemeGameResults';\n\nenum StateType {\n  Settings,\n  Playing,\n  Result,\n}\n\ntype State = {\n  type: StateType.Settings,\n} | {\n  type: StateType.Playing,\n  settings: FindPhonemeSettings\n} | {\n  type: StateType.Result,\n  playedRounds: PlayedRound[],\n};\n\nconst FindPhoneme: FC = () => {\n  const [state, setState] = useState<State>({ type: StateType.Settings });\n\n  if (state.type === StateType.Settings) {\n    return (\n      <FindPhonemeSettingsForm\n        onSubmit={(settings) => setState({\n          type: StateType.Playing,\n          settings,\n        })}\n      />\n    );\n  }\n\n  if (state.type === StateType.Playing) {\n    return (\n      <FindPhonemeGame\n        settings={state.settings}\n        onGameIsEnded={(playedRounds) => setState({\n          type: StateType.Result,\n          playedRounds,\n        })}\n      />\n    );\n  }\n\n  if (state.type === StateType.Result) {\n    return (\n      <FindPhonemeResults\n        playedRounds={state.playedRounds}\n        onReplay={() => setState({ type: StateType.Settings })}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default FindPhoneme;\n","import React, { FC, useMemo } from 'react';\n\n// MUI\nimport {\n  Box, Button, Stack, Typography, useTheme,\n} from '@mui/material';\n\n// i18n\nimport { useTranslation } from 'react-i18next';\n\n// Routing\nimport { PlayedRound } from '../types/find-phoneme.type';\n\n// Utils\nimport usePhonemeQuestionBuilder from '../hooks/usePhonemeQuestionBuilder';\n\ntype Props = {\n  playedRounds: PlayedRound[],\n  onReplay: () => any\n};\n\nconst FindPhonemeResults: FC<Props> = ({ playedRounds, onReplay }) => {\n  const { t } = useTranslation();\n  const phonemeQuestionBuilder = usePhonemeQuestionBuilder();\n  const theme = useTheme();\n\n  const wrongAnswers = useMemo(\n    () => playedRounds.filter(\n      (playedRound) => playedRound.guessed.symbol !== playedRound.toGuess.symbol,\n    ),\n    [playedRounds],\n  );\n\n  return (\n    <Stack spacing={2}>\n      <Typography>\n        {t('find_phoneme.result.title')}\n      </Typography>\n      <Typography>\n        {t('find_phoneme.result.score', { score: playedRounds.length - wrongAnswers.length, max: playedRounds.length })}\n      </Typography>\n      {wrongAnswers.length > 0 && (\n        <Stack spacing={1}>\n          <Typography>\n            {t('find_phoneme.result.bad_answers.title', { count: wrongAnswers.length })}\n          </Typography>\n          <Stack spacing={1}>\n            {wrongAnswers.map((wrongAnswer) => (\n              <Box sx={{\n                border: 1,\n                backgroundColor: theme.palette.grey[100],\n                borderColor: theme.palette.grey[200],\n                borderRadius: 1,\n                padding: 1,\n              }}\n              >\n                <Typography>\n                  {phonemeQuestionBuilder(wrongAnswer.toGuess)}\n                </Typography>\n                <Typography color=\"error\">\n                  {t('find_phoneme.result.bad_answers.guessed', { symbol: wrongAnswer.guessed.symbol })}\n                </Typography>\n                <Typography color=\"green\">\n                  {t('find_phoneme.result.bad_answers.to_guess', { symbol: wrongAnswer.toGuess.symbol })}\n                </Typography>\n              </Box>\n            ))}\n          </Stack>\n        </Stack>\n      )}\n      <Button onClick={onReplay}>\n        {t('find_phoneme.result.replay')}\n      </Button>\n    </Stack>\n  );\n};\n\nexport default FindPhonemeResults;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// i18n\nimport './app/i18n/i18n';\n\n// Routing\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  createRoutesFromElements,\n  Route,\n} from 'react-router-dom';\n\n// Components\nimport App from './app/screens/App';\nimport Home from './home/screens/Home';\n\n// Styling\nimport './index.css';\n\n// Utils\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport FindPhoneme from './find-phoneme/screens/FindPhoneme';\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<App />}>\n      <Route path=\"\" element={<Home />} />\n      <Route path=\"excercice\">\n        <Route path=\"find-phoneme\" element={<FindPhoneme />} />\n      </Route>\n    </Route>,\n  ),\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>,\n);\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();\n"],"sourceRoot":""}